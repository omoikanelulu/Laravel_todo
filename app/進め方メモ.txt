コントローラを作成（controller）

    php artisan make:controller コントローラ名

ルーティングの設定（routes）

テンプレートを作成（view）

    viewsフォルダに、〇〇.blade.phpを作成。これがテンプレート。

    viewsフォルダ内にlayoutsフォルダを作り、〇〇app.blade.phpの様にファイルを作ると、
    テンプレートの元となるレイアウトが作成できる。
    テンプレートでは、レイアウトを読み込んでおく。（@extends('layouts.ファイル名'）

DBと連携させる（model）
    migration完了
    seeding完了

artisanコマンド

    php artisan make:controller コントローラを作成
        --resource CRUD操作に必要なメソッドが複数用意された状態でコントローラが作成される
    php artisan make:middleware ミドルウェアを作成
    php artisan make:migration マイグレーションファイルを作成
    php artisan make:model モデルを作成
    php artisan make:provider プロバイダを作成
    php artisan make:request フォームリクエストを作成
    php artisan make:rule バリデーションルールを作成
    php artisan make:seeder シ－ダーファイルを作成
    php artisan make:test ユニットテストの作成
    php artisan make:migrate マイグレーションを実行
    php artisan make:serve ローカルでサーバ起動
    php artisan make:model モデルを作成
    php artisan db:seed シーディングを実行

戻るボタン
<input type="button" class="form-control btn btn-secondary" onclick="location.href='/todo';" value="もどる">

Laravelのmigrationを使用してDBテーブルを生成するため、まずはマイグレーションのファイルを作成
$ php artisan make:migration create_xxx_table
作成したmigrationファイルに必要なカラムを入力していく
DB名は複数形にしておく！（boards）

完成したらmigrationを実行
$ php artisan migrate
これでテーブルが作られる

続いてModelを作成する
$ php artisan make:model xxx
Modelは単数形で！（Board）

そしてコントローラを作成する
$ php artisan make:controller BoardController
public function index(Request $request)
public function add(Request $request)
public function create(Request $request)
等の処理を記述する

これらを表示するview（テンプレート）を作成する
ルート情報を記述する